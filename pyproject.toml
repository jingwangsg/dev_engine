[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
# See https://setuptools.pypa.io/en/latest/userguide/quickstart.html for more project configuration options.
name = "dev_engine"
dynamic = ["version"]
readme = "README.md"
classifiers = [
    "Development Status :: 3 - Alpha",
    "Programming Language :: Python :: 3",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
authors = [
    {name = "jing", email = "jing005@e.ntu.edu.sg"},
]
requires-python = ">=3.8"
dependencies = [
    "torch>=2.3.0",
    "torchvision",
    "transformers",
    "tokenizers",
    "sentencepiece",
    "accelerate",
    "peft",
    "bitsandbytes",
    "decord",
    "datasets",
    "webdataset",
    "polars",
    "pytorchvideo==0.1.5",
    "opencv-python==4.8.0.74", "timm==0.9.12",
    "scipy==1.12.0",  # originally 1.13.1, but has to be compatible with simpler_env/octo's dependencies
    "openpyxl==3.1.2",
    "openai==1.8.0",
    "nltk==3.3", "pywsd==1.2.4",
    "s2wrapper@git+https://github.com/bfshi/scaling_on_scales",
    "shortuuid==1.0.13",
    "pytorch-msssim==1.0.0",
    "lpips==0.1.4",
    "moviepy==1.0.3",
    "imageio==2.34.2",
    "numpy==1.26.4", "matplotlib==3.9.1",
    "ray==2.32.0", "hydra-core==1.3.2",
    "omegaconf==2.3.0", "mediapy==1.2.2",
    "pathos==0.3.0",
    "h5py==3.11.0"
]
license = {file = "LICENSE"}

[project.urls]

[project.optional-dependencies]
train = [
    "ninja",
    "wandb",
    "numpy",
    "pathos",
    "polars"
]
dev = [
    "ruff",
    "mypy>=1.0",
    "black>=23.0",
    "isort>=5.12",
    "pytest",
    "pytest-sphinx",
    "pytest-cov",
    "twine>=1.11.0",
    "build",
    "setuptools",
    "wheel",
    "Sphinx>=4.3.0",
    "furo>=2023.7.26",
    "myst-parser>=1.0",
    "sphinx-copybutton>=0.5.2",
    "sphinx-autobuild>=2021.3.14",
    "sphinx-autodoc-typehints>=1.23.3",
    "packaging"
]

[tool.setuptools.packages.find]
exclude = [
    "*.tests",
    "*.tests.*",
    "tests.*",
    "tests",
    "docs*",
    "scripts*",
    "*checkpoints*",
]

[tool.setuptools]
include-package-data = true

[tool.setuptools.package-data]
dev_engine = ["py.typed"]

[tool.setuptools.dynamic]
version = {attr = "dev_engine.version.VERSION"}

[tool.black]
line-length = 100
include = '\.pyi?$'
exclude = '''
(
      __pycache__
    | \.git
    | \.mypy_cache
    | \.pytest_cache
    | \.vscode
    | \.venv
    | \bdist\b
    | \bdoc\b
)
'''

[tool.isort]
profile = "black"
multi_line_output = 3

# You can override these pyright settings by adding a personal pyrightconfig.json file.
[tool.pyright]
reportPrivateImportUsage = false

[tool.ruff]
line-length = 115
target-version = "py39"

[tool.ruff.lint.per-file-ignores]
"__init__.py" = ["F401"]
